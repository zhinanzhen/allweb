<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.app.quartz.dao.ScheduleMapper">
	<resultMap id="baseResultMap" type="com.app.quartz.bean.ScheduleJob" >
	    <id column="ID" property="jobId" jdbcType="BIGINT" />
	    <result column="JOB_NAME" property="jobName" jdbcType="VARCHAR" />
	    <result column="JOB_GROUP" property="jobGroup" jdbcType="VARCHAR" />
	    <result column="JOB_STATUS" property="jobStatus" jdbcType="INTEGER" />
	    <result column="CRON_EXPRESSION" property="cronExpression" jdbcType="VARCHAR" />
	    <result column="CONCURRENT" property="concurrent" jdbcType="TINYINT" />
	    <result column="TARGET_METHOD" property="targetMethod" jdbcType="VARCHAR" />
	    <result column="IS_SPRING_BEAN" property="isSpringBean" jdbcType="INTEGER" />
	    <result column="CLAZZ" property="clazz" jdbcType="VARCHAR" />
	    <result column="CHILD_JOBS" property="childJobs" jdbcType="VARCHAR" />
	    <result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
	    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" typeHandler="com.app.common.handle.DateAndStringHandler"/>
	</resultMap>
	<select id="queryAllScheduleJob" parameterType="java.util.Map" resultMap="baseResultMap">
		select * from quartz_schedulejob 
	</select>
	<select id="queryScheduleJobById" parameterType="java.lang.Double" resultMap="baseResultMap">
		select * from quartz_schedulejob where id = #{jobId,jdbcType=DOUBLE}
	</select>
	<update id="updateScheduleJob" parameterType="com.app.quartz.bean.ScheduleJob">
		update quartz_schedulejob
		<set>
			<if test="jobName != null">
				JOB_NAME = #{jobName,jdbcType=VARCHAR},
			</if>
			<if test="jobGroup != null">
				JOB_GROUP = #{jobGroup,jdbcType=VARCHAR},
			</if>
			
			<if test="jobStatus != null">
				JOB_STATUS = #{jobStatus,jdbcType=INTEGER},
			</if>
			<if test="jobGroup != null">
				JOB_GROUP = #{jobGroup,jdbcType=VARCHAR},
			</if>
			<if test="cronExpression != null">
				CRON_EXPRESSION = #{cronExpression,jdbcType=VARCHAR},
			</if>
			<if test="concurrent != null">
				CONCURRENT = #{concurrent,jdbcType=TINYINT},
			</if>
			<if test="targetMethod != null">
				TARGET_METHOD = #{targetMethod,jdbcType=VARCHAR},
			</if>
			<if test="isSpringBean != null">
				IS_SPRING_BEAN = #{isSpringBean,jdbcType=INTEGER},
			</if>
			<if test="clazz != null">
				CLAZZ = #{clazz,jdbcType=VARCHAR},
			</if>
			<if test="childJobs != null">
				CHILD_JOBS = #{childJobs,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				DESCRIPTION = #{description,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{jobId,jdbcType=BIGINT}
	</update>
	<insert id="addScheduleJob" parameterType="com.app.quartz.bean.ScheduleJob" useGeneratedKeys="true" keyProperty="jobId">
		insert into quartz_schedulejob(job_group,job_name,cron_expression,clazz,target_method,is_spring_bean,
										concurrent,child_jobs,description,job_status,create_time) 
		values(#{jobGroup,jdbcType=VARCHAR},#{jobName,jdbcType=VARCHAR},
				#{cronExpression,jdbcType=VARCHAR},#{clazz,jdbcType=VARCHAR},
				#{targetMethod,jdbcType=VARCHAR},#{isSpringBean,jdbcType=INTEGER},
				#{concurrent,jdbcType=TINYINT},#{childJobs,jdbcType=VARCHAR},
				#{description,jdbcType=VARCHAR},#{jobStatus,jdbcType=INTEGER},#{createTime,jdbcType=TIMESTAMP,typeHandler=com.app.common.handle.DateAndStringHandler})
	</insert>
</mapper>